/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Milestone as PrismaMilestone } from "@prisma/client";

export class MilestoneServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MilestoneCountArgs, "select">
  ): Promise<number> {
    return this.prisma.milestone.count(args);
  }

  async milestones<T extends Prisma.MilestoneFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.MilestoneFindManyArgs>
  ): Promise<PrismaMilestone[]> {
    return this.prisma.milestone.findMany<Prisma.MilestoneFindManyArgs>(args);
  }
  async milestone<T extends Prisma.MilestoneFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.MilestoneFindUniqueArgs>
  ): Promise<PrismaMilestone | null> {
    return this.prisma.milestone.findUnique(args);
  }
  async createMilestone<T extends Prisma.MilestoneCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MilestoneCreateArgs>
  ): Promise<PrismaMilestone> {
    return this.prisma.milestone.create<T>(args);
  }
  async updateMilestone<T extends Prisma.MilestoneUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.MilestoneUpdateArgs>
  ): Promise<PrismaMilestone> {
    return this.prisma.milestone.update<T>(args);
  }
  async deleteMilestone<T extends Prisma.MilestoneDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.MilestoneDeleteArgs>
  ): Promise<PrismaMilestone> {
    return this.prisma.milestone.delete(args);
  }
}
